import numpy as np
from numpy.linalg import solve

# 給定數據
x = np.array([4.0, 4.2, 4.5, 4.7, 5.1, 5.5, 5.9, 6.3])
y = np.array([102.6, 113.2, 130.1, 142.1, 167.5, 195.1, 224.9, 256.8])

# 構造二次最小平方逼近 y = ax² + bx + c
n = len(x)
sum_x = np.sum(x)
sum_x2 = np.sum(x**2)
sum_x3 = np.sum(x**3)
sum_x4 = np.sum(x**4)
sum_y = np.sum(y)
sum_xy = np.sum(x*y)
sum_x2y = np.sum(x**2 * y)

# 構建正規方程
A = np.array([[sum_x4, sum_x3, sum_x2],
              [sum_x3, sum_x2, sum_x],
              [sum_x2, sum_x, n]])
b = np.array([sum_x2y, sum_xy, sum_y])

# 解方程
coefficients = solve(A, b)
a, b, c = coefficients

# 計算誤差
y_pred = a * x**2 + b * x + c
error = np.sum((y - y_pred)**2)

print("1a. 二次最小平方逼近結果:")
print(f"多項式係數: a = {a:.4f}, b = {b:.4f}, c = {c:.4f}")
print(f"誤差: {error:.4f}")
print(f"擬合方程: y = {a:.4f}x² + {b:.4f}x + {c:.4f}")
